# Generated by Django 2.2.13 on 2020-09-04 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ('stories', '0001_squashed_0002_auto_20180418_1722'),
        ('stories', '0002_auto_20200724_2142'),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('game_forum_threads', '0001_squashed_0006_auto_20201013_1740'),
        ('games', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    max_length=500, verbose_name='name')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    default='', max_length=200, verbose_name='name')),
                ('announcement', models.TextField(
                    blank=True, default='', verbose_name='announcement')),
                ('announcement_preview', models.TextField(
                    blank=True, default='',
                    verbose_name='announcement preview')),
                ('short_comment', models.CharField(
                    blank=True, default='', max_length=500,
                    verbose_name='short comment')),
                ('introduction', models.TextField(
                    blank=True, default='', verbose_name='introduction')),
                ('creation_year', models.PositiveIntegerField(
                    choices=[
                        (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993),
                        (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997),
                        (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001),
                        (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005),
                        (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009),
                        (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013),
                        (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017),
                        (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021),
                        (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025),
                        (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029),
                        (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033),
                        (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037),
                        (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041),
                        (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045),
                        (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049)
                    ], verbose_name='creation year')),
                ('card_image', models.FileField(
                    blank=True, null=True, upload_to='stories/card_image',
                    verbose_name='playing card image')),
                ('top_banner', models.FileField(
                    blank=True, null=True, upload_to='stories/top_banner',
                    verbose_name='top banner')),
                ('bottom_banner', models.FileField(
                    blank=True, null=True, upload_to='stories/bottom_banner',
                    verbose_name='bottom banner')),
                ('hidden', models.BooleanField(
                    default=True, verbose_name='hidden')),
                ('genres', models.ManyToManyField(
                    blank=True, related_name='stories', to='stories.Genre',
                    verbose_name='genres')),
            ],
            options={
                'verbose_name': 'story',
                'verbose_name_plural': 'stories',
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('name', models.CharField(
                    default='', max_length=200, verbose_name='name')),
                ('image', models.FileField(
                    upload_to='stories/avatars', verbose_name='file')),
                ('story', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='avatars', to='stories.Story',
                    verbose_name='story')),
            ],
            options={
                'verbose_name': 'avatar',
                'verbose_name_plural': 'avatars',
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    default='', max_length=200, verbose_name='name')),
                ('order', models.IntegerField(
                    default=0, editable=False, verbose_name='order')),
                ('sex', models.SmallIntegerField(
                    choices=[
                        (0, 'Not defined'), (1, 'Male'), (2, 'Female'),
                        (3, 'Middle'), (4, 'Plural')
                    ], default=0, verbose_name='sex')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('show_in_character_list', models.BooleanField(
                    default=False, verbose_name='show in character list')),
                ('avatar', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='characters', to='stories.Avatar',
                    verbose_name='avatar')),
                ('story', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='characters', to='stories.Story',
                    verbose_name='story')),
            ],
            options={
                'verbose_name': 'character',
                'verbose_name_plural': 'characters',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('order', models.IntegerField(default=0, editable=False)),
                ('name', models.CharField(
                    default='', max_length=200, verbose_name='name')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('comments_count', models.PositiveIntegerField(
                    default=0, verbose_name='comments_count')),
                ('deleted', models.BooleanField(
                    default=False, verbose_name='deleted')),
                ('game', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='story_variation', to='games.Game',
                    verbose_name='game')),
                ('story', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='variations', to='stories.Story',
                    verbose_name='story')),
                ('thread', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='variations', to='game_forum_threads.Thread',
                    verbose_name='new forum')),
            ],
            options={
                'verbose_name': 'variation',
                'verbose_name_plural': 'variations',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('order', models.IntegerField(default=0, editable=False)),
                ('name', models.CharField(
                    default='', max_length=200, verbose_name='name')),
                ('sex', models.SmallIntegerField(
                    choices=[
                        (0, 'Not defined'), (1, 'Male'), (2, 'Female'),
                        (3, 'Middle'), (4, 'Plural')
                    ], default=0, verbose_name='sex')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('body', models.TextField(
                    blank=True, null=True, verbose_name='text')),
                ('show_in_character_list', models.BooleanField(
                    default=False, verbose_name='show in character list')),
                ('show_in_online_character', models.BooleanField(
                    default=True, verbose_name='show in online characters')),
                ('show_trust_marks', models.BooleanField(
                    default=True, verbose_name='show trust marks')),
                ('requestable', models.BooleanField(
                    default=True, verbose_name='requestable')),
                ('deleted', models.BooleanField(
                    default=False, verbose_name='deleted')),
                ('visit_time', models.DateTimeField(
                    blank=True, null=True, verbose_name='visit time')),
                ('comments_count', models.PositiveIntegerField(
                    default=0, verbose_name='comments count')),
                ('trust_value', models.PositiveIntegerField(
                    default=0, verbose_name='trust value')),
                ('avatar', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='roles', to='stories.Avatar',
                    verbose_name='avatar')),
                ('character', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='roles', to='stories.Character',
                    verbose_name='character')),
                ('user', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='roles', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
                ('variation', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='roles', to='stories.Variation',
                    verbose_name='variation')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='RoleDeleteMark',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('delete_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='created at')),
                ('role', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='delete_marks', to='stories.Role',
                    verbose_name='role')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='role_delete_marks',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'role delete mark',
                'verbose_name_plural': 'roles delete marks',
            },
        ),
        migrations.CreateModel(
            name='Illustration',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    max_length=500, verbose_name='name')),
                ('admins_only', models.BooleanField(
                    default=True, verbose_name='Hide in materials')),
                ('image', models.FileField(
                    upload_to='stories/illustrations/', verbose_name='image')),
                ('thumb', models.FileField(
                    upload_to='stories/illustrations/', verbose_name='thumb')),
                ('story', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='illustrations', to='stories.Story',
                    verbose_name='story')),
                ('variation', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='illustrations', to='stories.Variation',
                    verbose_name='variation')),
            ],
        ),
        migrations.CreateModel(
            name='AvatarAlternative',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('height', models.IntegerField(
                    default=0, verbose_name='height')),
                ('width', models.IntegerField(
                    default=0, verbose_name='width')),
                ('image', models.FileField(
                    upload_to='stories/avatars-alt', verbose_name='file')),
                ('avatar', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='alternatives', to='stories.Avatar',
                    verbose_name='avatar')),
            ],
            options={
                'verbose_name': 'avatar alternative',
                'verbose_name_plural': 'avatars alternaties',
            },
        ),
        migrations.CreateModel(
            name='AdditionalMaterial',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    max_length=500, verbose_name='name')),
                ('body', models.TextField(default='', verbose_name='body')),
                ('admins_only', models.BooleanField(
                    default=True, verbose_name='Hide in materials')),
                ('story', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='additional_materials', to='stories.Story',
                    verbose_name='story')),
                ('variation', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='additional_materials',
                    to='stories.Variation', verbose_name='variation')),
            ],
            options={
                'verbose_name': 'additional material',
                'verbose_name_plural': 'additional materials',
            },
        ),
        migrations.CreateModel(
            name='StoryAuthor',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('story', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='authors', to='stories.Story',
                    verbose_name='story')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='authored_stories',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'story author',
                'verbose_name_plural': 'story authors',
                'unique_together': {('story', 'user')},
            },
        ),
        migrations.CreateModel(
            name='StoryAdmin',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('create_game', models.BooleanField(
                    choices=[(False, 'No'), (True, 'Yes')], default=False,
                    verbose_name='create game')),
                ('story', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='admins', to='stories.Story',
                    verbose_name='story')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='admined_stories',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'story admin',
                'verbose_name_plural': 'story admins',
                'unique_together': {('story', 'user')},
            },
        ),
    ]
