# Generated by Django 2.2.13 on 2020-07-16 09:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import mptt.fields
import tulius.forum.models


class Migration(migrations.Migration):

    replaces = [
        ('forum', '0001_initial'), ('forum', '0002_auto_20180418_1722'),
        ('forum', '0003_auto_20200503_2031'),
        ('forum', '0004_auto_20200516_1037'),
        ('forum', '0005_auto_20200622_1818'),
        ('forum', '0006_auto_20200622_1844'),
        ('forum', '0007_auto_20200630_1059'),
        ('forum', '0008_auto_20200710_1019')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('plugin_id', models.PositiveIntegerField(
                    blank=True, null=True, verbose_name='plugin')),
                ('title', models.CharField(
                    max_length=255, verbose_name='title')),
                ('body', models.TextField(verbose_name='body')),
                ('create_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='created at')),
                ('edit_time', models.DateTimeField(
                    blank=True, null=True, verbose_name='edited at')),
                ('voting', models.BooleanField(
                    default=False, verbose_name='voting')),
                ('deleted', models.BooleanField(
                    default=False, verbose_name='deleted')),
                ('likes', models.IntegerField(default=0, verbose_name='likes')),
                ('page', models.IntegerField(default=0, verbose_name='page')),
                ('data1', models.IntegerField(blank=True, null=True)),
                ('data2', models.IntegerField(blank=True, null=True)),
                ('editor', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_comments_edited',
                    to=settings.AUTH_USER_MODEL, verbose_name='edited by')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('plugin_id', models.PositiveIntegerField(
                    blank=True, null=True, verbose_name='plugin')),
                ('title', models.CharField(
                    max_length=255, verbose_name='title')),
                ('body', models.CharField(max_length=255, verbose_name='body')),
                ('room', models.BooleanField(
                    default=False, verbose_name='room')),
                ('access_type', models.SmallIntegerField(
                    choices=[
                        (0, 'access not set'), (1, 'free access'),
                        (2, 'read only access'), (3, 'private(no access)')],
                    default=0, verbose_name='access type')),
                ('create_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='created at')),
                ('closed', models.BooleanField(
                    default=False, verbose_name='closed')),
                ('important', models.BooleanField(
                    default=False, verbose_name='important')),
                ('deleted', models.BooleanField(
                    default=False, verbose_name='deleted')),
                ('protected_threads', models.SmallIntegerField(
                    default=0, verbose_name='protected threads')),
                ('first_comment_id', models.IntegerField(
                    blank=True, null=True, verbose_name='first comment')),
                ('last_comment_id', models.IntegerField(
                    blank=True, null=True, verbose_name='last comment')),
                ('comments_count', models.IntegerField(
                    default=0, verbose_name='first comment')),
                ('data1', models.IntegerField(
                    blank=True, null=True, verbose_name='public comments')),
                ('data2', models.IntegerField(
                    blank=True, null=True, verbose_name='protected comments')),
                ('lft', models.PositiveIntegerField(
                    db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(
                    db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(
                    db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(
                    db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='children', to='forum.Thread',
                    verbose_name='parent thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_threads', to=settings.AUTH_USER_MODEL,
                    verbose_name='author')),
            ],
            options={
                'verbose_name': 'thread',
                'verbose_name_plural': 'threads',
                'ordering': ['-important', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Voting',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('voting_name', models.CharField(
                    blank=True, default='', max_length=255,
                    verbose_name='name')),
                ('voting_body', models.TextField(verbose_name='voting text')),
                ('closed', models.BooleanField(
                    default=False, verbose_name='closed')),
                ('anonymous', models.BooleanField(
                    default=True, verbose_name='anonymous')),
                ('show_results', models.BooleanField(
                    default=True,
                    verbose_name='show results before close of voting')),
                ('preview_results', models.BooleanField(
                    default=False, verbose_name='add preview results button')),
                ('comment', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='voting_list', to='forum.Comment',
                    verbose_name='comment')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='create_votings', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
            ],
            options={
                'verbose_name': 'voting',
                'verbose_name_plural': 'votings',
            },
        ),
        migrations.CreateModel(
            name='VotingChoice',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    blank=True, default='', max_length=255,
                    verbose_name='name')),
                ('voting', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='choices', to='forum.Voting',
                    verbose_name='voting')),
            ],
            options={
                'verbose_name': 'voting choice',
                'verbose_name_plural': 'voting choices',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='name')),
                ('mime', models.CharField(
                    max_length=500, verbose_name='mime type')),
                ('body', models.FileField(
                    upload_to='forum_uploads', verbose_name='file')),
                ('file_length', models.IntegerField(
                    default=0, verbose_name='file length')),
                ('create_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='uploaded at')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_files', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
            ],
            options={
                'verbose_name': 'uploaded file',
                'verbose_name_plural': 'uploaded files',
            },
        ),
        migrations.CreateModel(
            name='ThreadReadMark',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('not_readed_comment', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='not_readed_users', to='forum.Comment',
                    verbose_name='not readed comment')),
                ('readed_comment', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='readed_users', to='forum.Comment',
                    verbose_name='readed comment')),
                ('thread', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='read_marks', to='forum.Thread',
                    verbose_name='thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_readed_threads',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'thread read mark',
                'verbose_name_plural': 'thread read marks',
            },
        ),
        migrations.CreateModel(
            name='ThreadDeleteMark',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('deleted', models.BooleanField(
                    default=True, verbose_name='deleted')),
                ('delete_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='deleted at')),
                ('thread', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='delete_marks', to='forum.Thread',
                    verbose_name='thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='thread_delete_marks',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'thread delete mark',
                'verbose_name_plural': 'threads delete marks',
            },
        ),
        migrations.CreateModel(
            name='OnlineUser',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('visit_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='visit time')),
                ('thread', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='visit_marks', to='forum.Thread',
                    verbose_name='thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_visit', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
            ],
            options={
                'verbose_name': 'online user',
                'verbose_name_plural': 'online users',
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('comment', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='liked', to='forum.Comment',
                    verbose_name='comment')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='liked_comments', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
            ],
            options={
                'verbose_name': 'comment like',
                'verbose_name_plural': 'comments likes',
            },
        ),
        migrations.CreateModel(
            name='CommentDeleteMark',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('deleted', models.BooleanField(
                    default=True, verbose_name='deleted')),
                ('delete_time', models.DateTimeField(
                    auto_now_add=True, verbose_name='deleted at')),
                ('comment', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='delete_marks', to='forum.Comment',
                    verbose_name='comment')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='comments_delete_marks',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'comment delete mark',
                'verbose_name_plural': 'comments delete marks',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='comments', to='forum.Thread',
                verbose_name='thread'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='answers', to='forum.Comment',
                verbose_name='reply to'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='forum_comments', to=settings.AUTH_USER_MODEL,
                verbose_name='author'),
        ),
        migrations.CreateModel(
            name='VotingVote',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('choice', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='voting_choices', to='forum.VotingChoice',
                    verbose_name='voting')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='voting_votes', to=settings.AUTH_USER_MODEL,
                    verbose_name='user')),
            ],
            options={
                'verbose_name': 'voting vote',
                'verbose_name_plural': 'voting votes',
                'unique_together': {('choice', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ThreadCollapseStatus',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('collapse_threads', models.BooleanField(default=False)),
                ('collapse_rooms', models.BooleanField(default=False)),
                ('thread', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to='forum.Thread', verbose_name='thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'thread access right',
                'verbose_name_plural': 'threads access rights',
                'unique_together': {('thread', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ThreadAccessRight',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('access_level', models.SmallIntegerField(
                    choices=[
                        (3, 'read and write rights'), (1, 'read right'),
                        (7, 'read, write and moderate'),
                        (2, 'write only right'),
                        (5, 'read and moderate right(no write)')],
                    default=3, verbose_name='access rights')),
                ('thread', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='rights', to='forum.Thread',
                    verbose_name='thread')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    related_name='forum_theads_rights',
                    to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'thread access right',
                'verbose_name_plural': 'threads access rights',
                'unique_together': {('thread', 'user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='onlineuser',
            unique_together={('user', 'thread')},
        ),
        migrations.AddField(
            model_name='comment',
            name='media',
            field=jsonfield.fields.JSONField(
                default=tulius.forum.models.default_media),
        ),
        migrations.AlterField(
            model_name='thread',
            name='body',
            field=models.TextField(verbose_name='body'),
        ),
        migrations.RemoveField(
            model_name='comment',
            name='voting',
        ),
        migrations.AddField(
            model_name='thread',
            name='media',
            field=jsonfield.fields.JSONField(
                default=tulius.forum.models.default_media),
        ),
    ]
