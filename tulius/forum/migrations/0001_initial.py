# Generated by Django 2.0.4 on 2018-04-18 14:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'plugin_id',
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name='plugin')),
                (
                    'title',
                    models.CharField(max_length=255, verbose_name='title')),
                ('body', models.TextField(verbose_name='body')),
                (
                    'create_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created at')),
                (
                    'edit_time',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='edited at')),
                (
                    'voting',
                    models.BooleanField(default=False, verbose_name='voting')),
                (
                    'deleted',
                    models.BooleanField(
                        default=False, verbose_name='deleted')),
                (
                    'likes',
                    models.IntegerField(default=0, verbose_name='likes')),
                (
                    'page',
                    models.IntegerField(default=0, verbose_name='page')),
                ('data1', models.IntegerField(blank=True, null=True)),
                ('data2', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CommentDeleteMark',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'description',
                    models.TextField(
                        blank=True, null=True, verbose_name='description')),
                (
                    'deleted',
                    models.BooleanField(
                        default=True, verbose_name='deleted')),
                (
                    'delete_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='deleted at')),
            ],
            options={
                'verbose_name': 'comment delete mark',
                'verbose_name_plural': 'comments delete marks',
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
            ],
            options={
                'verbose_name': 'comment like',
                'verbose_name_plural': 'comments likes',
            },
        ),
        migrations.CreateModel(
            name='OnlineUser',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'visit_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='visit time')),
            ],
            options={
                'verbose_name': 'online user',
                'verbose_name_plural': 'online users',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'plugin_id',
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name='plugin')),
                (
                    'title',
                    models.CharField(
                        max_length=255, verbose_name='title')),
                (
                    'body',
                    models.CharField(max_length=255, verbose_name='body')),
                (
                    'room',
                    models.BooleanField(default=False, verbose_name='room')),
                (
                    'access_type',
                    models.SmallIntegerField(
                        choices=[
                            (0, 'access not set'),
                            (1, 'free access'),
                            (2, 'read only access'),
                            (3, 'private(no access)')],
                        default=0,
                        verbose_name='access type')),
                (
                    'create_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created at')),
                (
                    'closed',
                    models.BooleanField(default=False, verbose_name='closed')),
                (
                    'important',
                    models.BooleanField(
                        default=False, verbose_name='important')),
                (
                    'deleted',
                    models.BooleanField(
                        default=False, verbose_name='deleted')),
                (
                    'protected_threads',
                    models.SmallIntegerField(
                        default=0, verbose_name='protected threads')),
                (
                    'first_comment_id',
                    models.IntegerField(
                        blank=True, null=True, verbose_name='first comment')),
                (
                    'last_comment_id',
                    models.IntegerField(
                        blank=True, null=True, verbose_name='last comment')),
                (
                    'comments_count',
                    models.IntegerField(
                        default=0, verbose_name='first comment')),
                (
                    'data1',
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name='public comments')),
                (
                    'data2',
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name='protected comments')),
                (
                    'lft',
                    models.PositiveIntegerField(
                        db_index=True, editable=False)),
                (
                    'rght',
                    models.PositiveIntegerField(
                        db_index=True, editable=False)),
                (
                    'tree_id',
                    models.PositiveIntegerField(
                        db_index=True, editable=False)),
                (
                    'level',
                    models.PositiveIntegerField(
                        db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'thread',
                'verbose_name_plural': 'threads',
                'ordering': ['-important', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ThreadAccessRight',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'access_level',
                    models.SmallIntegerField(
                        choices=[
                            (3, 'read and write rights'),
                            (1, 'read right'),
                            (7, 'read, write and moderate'),
                            (2, 'write only right'),
                            (5, 'read and moderate right(no write)')],
                        default=0,
                        verbose_name='access rights')),
            ],
            options={
                'verbose_name': 'thread access right',
                'verbose_name_plural': 'threads access rights',
            },
        ),
        migrations.CreateModel(
            name='ThreadCollapseStatus',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                ('collapse_threads', models.BooleanField(default=False)),
                ('collapse_rooms', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'thread access right',
                'verbose_name_plural': 'threads access rights',
            },
        ),
        migrations.CreateModel(
            name='ThreadDeleteMark',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'description',
                    models.TextField(
                        blank=True, null=True, verbose_name='description')),
                (
                    'deleted',
                    models.BooleanField(default=True, verbose_name='deleted')),
                (
                    'delete_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='deleted at')),
            ],
            options={
                'verbose_name': 'thread delete mark',
                'verbose_name_plural': 'threads delete marks',
            },
        ),
        migrations.CreateModel(
            name='ThreadReadMark',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
            ],
            options={
                'verbose_name': 'thread read mark',
                'verbose_name_plural': 'thread read marks',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'name',
                    models.CharField(max_length=500, verbose_name='name')),
                (
                    'mime',
                    models.CharField(
                        max_length=500, verbose_name='mime type')),
                (
                    'body',
                    models.FileField(
                        upload_to='forum_uploads', verbose_name='file')),
                (
                    'file_length',
                    models.IntegerField(
                        default=0, verbose_name='file length')),
                (
                    'create_time',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='uploaded at')),
            ],
            options={
                'verbose_name': 'uploaded file',
                'verbose_name_plural': 'uploaded files',
            },
        ),
        migrations.CreateModel(
            name='Voting',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'voting_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=255,
                        verbose_name='name')),
                (
                    'voting_body',
                    models.TextField(verbose_name='voting text')),
                (
                    'closed',
                    models.BooleanField(default=False, verbose_name='closed')),
                (
                    'anonymous',
                    models.BooleanField(
                        default=True, verbose_name='anonymous')),
                (
                    'show_results',
                    models.BooleanField(
                        default=True,
                        verbose_name='show results before close of voting')),
                (
                    'preview_results',
                    models.BooleanField(
                        default=False,
                        verbose_name='add preview results button')),
            ],
            options={
                'verbose_name': 'voting',
                'verbose_name_plural': 'votings',
            },
        ),
        migrations.CreateModel(
            name='VotingChoice',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=255,
                        verbose_name='name')),
            ],
            options={
                'verbose_name': 'voting choice',
                'verbose_name_plural': 'voting choices',
            },
        ),
        migrations.CreateModel(
            name='VotingVote',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID')),
                (
                    'choice',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='voting_choices',
                        to='forum.VotingChoice',
                        verbose_name='voting')),
            ],
            options={
                'verbose_name': 'voting vote',
                'verbose_name_plural': 'voting votes',
            },
        ),
    ]
