# Generated by Django 2.2.13 on 2020-07-21 13:10

from django.db import migrations, models
from django.utils import html

from djfw.wysibb.templatetags import bbcodes


def migrate_votes(apps, schema_editor):
    Voting = apps.get_model('forum', 'Voting')
    VotingChoice = apps.get_model('forum', 'VotingChoice')
    VotingVote = apps.get_model('forum', 'VotingVote')
    dups = 0
    for voting in Voting.objects.all():
        comment = voting.comment
        if comment.media['voting'] != voting.pk:
            print(f'Voting {voting.pk} missed, delete it')
            VotingVote.objects.filter(choice__voting=voting).delete()
            VotingChoice.objects.filter(voting=voting).delete()
            voting.delete()
            continue
        choices = list(
            VotingChoice.objects.filter(voting=voting).order_by('id'))
        mapping = {choice.pk: i for i, choice in enumerate(choices)}
        votes = 0
        counts = {choice.pk: 0 for choice in choices}
        users = []
        for vote in VotingVote.objects.filter(choice__in=mapping.keys()):
            if vote.user_id in users:
                print(f'Dup found {comment.pk}:{vote.user_id}')
                vote.delete()
                dups += 1
                continue
            users.append(vote.user_id)
            vote.comment = voting.comment
            vote.tmp = mapping[vote.choice_id]
            vote.save()
            votes += 1
            counts[vote.choice_id] += 1
        data = {
            'name': bbcodes.bbcode(voting.voting_name),
            'body': bbcodes.bbcode(voting.voting_body),
            'closed': False,
            'show_results': voting.show_results,
            'preview_results': voting.preview_results,
            'choices': {
                'items': [{
                    'id': i,
                    'name': html.escape(item.name),
                    'count': counts[item.pk],
                    'percent': counts[item.pk] * 100 / votes if votes else 0,
                } for i, item in enumerate(choices)],
                'votes': votes,
            },
        }
        comment.media['voting'] = data
        comment.save()
        thread = comment.parent
        if comment.id == thread.first_comment_id:
            thread.media['voting'] = data
            thread.save()
        print(
            f'Voting {voting.pk} migrated on {comment.pk}({thread.plugin_id})')
    print(f'Total dupliates: {dups}')


class Migration(migrations.Migration):

    dependencies = [
        ('forum', '0002_auto_20200721_1305'),
    ]

    operations = [
        migrations.RunPython(migrate_votes),
        migrations.RemoveField(
            model_name='votingvote',
            name='choice',
        ),
        migrations.AddField(
            model_name='votingvote',
            name='choice',
            field=models.IntegerField(default=0, verbose_name='choice'),
            preserve_default=False,
        ),
    ]
