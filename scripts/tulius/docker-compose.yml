version: '3.5'
services:
  redis:
    image: redis
    restart: always
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.3
    container_name: tulius_redis

  mysql:
    image: mysql/mysql-server:5.7.22
    restart: always
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.2
    volumes:
      - type: bind
        source: "../../data/mysql"
        target: "/var/lib/mysql"
      - ./mysql.cnf:/etc/my.cnf:ro
    container_name: tulius_mysql

  nginx:
    image: nginx
    restart: always
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.4
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/travis/master/data:/opt/master_data
      - /home/travis/dev/data:/opt/dev_data
    command: ['nginx', '-g', 'daemon off;']
    container_name: tulius_nginx

  mail:
    build:
      context: ./postfix
    volumes:
      - ../../data/mail:/var/mail
    restart: always
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.5
    container_name: tulius_mail

  elastic_search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    restart: always
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.30
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ../../data/elastic:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
    container_name: tulius_elastic

  log_stash:
    image: docker.elastic.co/logstash/logstash:7.9.2
    restart: always
    environment:
      - MONITORING_ENABLED=false
    networks:
      tuliusnet:
        ipv4_address: 10.5.0.31
    volumes:
      - ./logstash:/usr/share/logstash/pipeline/
    ports:
      - 11011:11011
    container_name: tulius_log_stash

#  sentry_web:
#    build:
#      context: ./sentry
#    restart: always
#    networks:
#      tuliusnet:
#        ipv4_address: 10.5.0.6
#    volumes:
#      - ../../data/:/var/lib/sentry/files
#    container_name: tulius_sentry
#
#  sentry_worker:
#    build:
#      context: ./sentry
#    command: run worker
#    restart: always
#    networks:
#      tuliusnet:
#        ipv4_address: 10.5.0.7
#    volumes:
#      - ../../data/:/var/lib/sentry/files
#    container_name: tulius_sentry_worker
#
#  sentry_cron:
#    build:
#      context: ./sentry
#    command: run cron
#    restart: always
#    networks:
#      tuliusnet:
#        ipv4_address: 10.5.0.8
#    volumes:
#      - ../../data/:/var/lib/sentry/files
#    container_name: tulius_sentry_cron

networks:
  tuliusnet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
    name: tuliusnet
